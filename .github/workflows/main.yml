name: Java Test Generation

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Set N number of parallel jobs you want to run tests on.
        # Use higher number if you have slow tests to split them on more parallel jobs.
        # Remember to update ci_node_index below to 0..N-1
        ci_node_total: [8]
        # set N-1 indexes for parallel jobs
        # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
        ci_node_index: [0, 1, 2, 3, 4, 5, 6, 7]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup JDK
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    #- name: Set up JDK 19.0.1
      #run: sudo apt-get update && sudo apt-get install -y openjdk-19-jdk
     # run: |
      #      sudo apt-get install openjdk-8-jdk
       #     java -version
            #sudo update-alternatives --set java /usr/lib/jvm/jdk1.8.0_version/bin/java
    - name: Compile Somma.java
      run: javac Somma/src/Somma.java
    - name: Download Randoop
      run: |
            wget https://github.com/randoop/randoop/releases/download/v3.0.6/randoop-all-3.0.6.jar -P Somma/src
    - name: Unzip Emma
      run: unzip Somma/src/emma-2.0.5312.zip -d Somma/src
    - name: Inizializza Emma
      #run: java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar emma instr -m overwrite -d Prova -cp /home/runner/work/Somma-prova/Somma-prova/Somma/src -ix Prova/coverage.txt -out Prova/coverage.em
      run: |
            java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar emma instr -m fullcopy -d Prova -ip /home/runner/work/Somma-prova/Somma-prova/Somma/src -ix @Somma/src/myfilters.txt -out Prova/coverage.em
            #java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src:/home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar:/home/runner/work/Somma-prova/Somma-prova/Somma/src/ripper.jar ripper.RipperApplicationTest Somma.class 1 1 0 4
    - name: Generate Randoop tests with Emma
      run: java -noverify -classpath /home/runner/work/Somma-prova/Somma-prova/Prova/classes:/home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar:/home/runner/work/Somma-prova/Somma-prova/Somma/src/randoop-all-3.0.6.jar randoop.main.Main gentests --classlist=Somma/src/lista.txt --timelimit=20 --junit-output-dir=Prova
    - name: Emma report
      run: |
            #echo "Percorso file coverage.ec: Prova/coverage.ec"
            cp coverage.ec Prova/coverage.ec
            #java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar emma report -r html  -in Prova/coverage.em,Prova/coverage.ec
    - name: Emma merge
      run: |
            if [exist Prova/coverage.es]: 
            java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar emma merge -in  Prova/coverage.es, Prova/coverage.es -out Prova/coverageunion.es 
            java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar emma report -r html  -in Prova/coverageunion.ec
      #run: java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar emma merge -in Prova/coverage.em,Prova/coverage.ec -out Prova/coverage.es
    - name: Controllo
      run: |
            echo "classes"
            ls Prova/classes
            echo "Prova"
            ls Prova
            ls

    - name: Upload Emma reports
      uses: actions/upload-artifact@v2
      with:
        name: Emma reports
        path: /home/runner/work/Somma-prova/Somma-prova/coverage/
