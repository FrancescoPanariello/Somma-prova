name: Java Test Generation

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Set N number of parallel jobs you want to run tests on.
        # Use higher number if you have slow tests to split them on more parallel jobs.
        # Remember to update ci_node_index below to 0..N-1
        ci_node_total: [8]
        # set N-1 indexes for parallel jobs
        # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
        ci_node_index: [0, 1, 2, 3, 4, 5, 6, 7]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup JDK
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    #- name: Set up JDK 19.0.1
      #run: sudo apt-get update && sudo apt-get install -y openjdk-19-jdk
     # run: |
      #      sudo apt-get install openjdk-8-jdk
       #     java -version
            #sudo update-alternatives --set java /usr/lib/jvm/jdk1.8.0_version/bin/java
    - name: Compile Somma.java
      run: javac Somma/src/Somma.java
    - name: Download Randoop
      run: wget https://github.com/randoop/randoop/releases/download/v3.0.6/randoop-all-3.0.6.jar -P Somma/src
    - name: Unzip Emma
      run: unzip Somma/src/emma-2.0.5312.zip -d Somma/src
    - name: Run emma e randoop
      #run: java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar emma instr -m overwrite -d Prova -cp /home/runner/work/Somma-prova/Somma-prova/Somma/src -ix Prova/coverage.txt -out Prova/coverage.em
      run: |
            #!/bin/bash
            timestamp=${{ matrix.ci_node_index }}
            echo "prova $timestamp"
            #Instr emma
            java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar emma instr -m fullcopy -d Prova -ip /home/runner/work/Somma-prova/Somma-prova/Somma/src -ix @Somma/src/myfilters.txt -out Prova/coverage_$timestamp.em

            #Randoop
            java -noverify -classpath /home/runner/work/Somma-prova/Somma-prova/Prova/classes:/home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar:/home/runner/work/Somma-prova/Somma-prova/Somma/src/randoop-all-3.0.6.jar randoop.main.Main gentests --classlist=Somma/src/lista.txt --timelimit=20 --junit-output-dir=Prova

            cp coverage.ec Prova/coverage_$timestamp.ec
            rm coverage.ec

            #Emma report
            java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar emma report -r html  -Dreport.html.out.file=/home/runner/work/Somma-prova/Somma-prova/coverage/coverage_$timestamp/coverage_$timestamp.html  -in Prova/coverage_$timestamp.em,Prova/coverage_$timestamp.ec
            
            cp Prova/coverage_$timestamp.ec /home/runner/work/Somma-prova/Somma-prova/coverage/coverage_$timestamp/coverage_$timestamp.ec
            cp Prova/coverage_$timestamp.em /home/runner/work/Somma-prova/Somma-prova/coverage/coverage_$timestamp/coverage_$timestamp.em
    - name: Upload Emma reports
      uses: actions/upload-artifact@v2
      with:
        name: Emma reports
        path: /home/runner/work/Somma-prova/Somma-prova/coverage/*
        
  job:
   needs: test
   runs-on: ubuntu-latest
   steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup JDK
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Download a single artifact
      uses: actions/download-artifact@v3
      with:
       name: Emma reports
    - name: Prova
      run: ls
    - name: Unzip Emma
      run: unzip Somma/src/emma-2.0.5312.zip -d Somma/src
    - name: Emma merge
      run: |
            #!/bin/bash
            FILES= /home/runner/work/Somma-prova/Somma-prova/coverage_?/*.em
            FILES2= /home/runner/work/Somma-prova/Somma-prova/coverage_?/*.ec
            java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar emma merge -in FILES -out coverageunion.em
            java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar emma merge -in FILES2 -out coverageunion.ec
            #count=0
            #cp /home/runner/work/Somma-prova/Somma-prova/coverage_$count/coverage_$count.em /home/runner/work/Somma-prova/Somma-prova/coverageunion.em
            #for file in /home/runner/work/Somma-prova/Somma-prova/coverage_?/*.em
            #do
             # count2=$(($count+1))
              #FILE=coverage_$count/coverage_$count.em
              #if test -f "$FILE"; then
               #   echo "$FILE exists."
                #  java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar emma merge -in coverageunion.em,coverage_$count2/coverage_$count.em -out coverage_$count2/coverage_$count2.em
                 # java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar emma merge -in coverageunion.ec,coverage_$count2/coverage_$count.ec -out coverage_$count2/coverage_$count2.ec
              #fi
            #done
            cp /home/runner/work/Somma-prova/Somma-prova/coverage_$((count))/coverage_$((count)).em /home/runner/work/Somma-prova/Somma-prova/coveragemerge.em 
            cp /home/runner/work/Somma-prova/Somma-prova/coverage_$((count))/coverage_$((count)).ec /home/runner/work/Somma-prova/Somma-prova/coveragemerge.ec
            
            echo /home/runner/work/Somma-prova/Somma-prova/coverage_$((count))/coverage_$((count)).ec
            java -classpath /home/runner/work/Somma-prova/Somma-prova/Somma/src/emma-2.0.5312/lib/emma.jar emma report -r html  -Dreport.html.out.file=/home/runner/work/Somma-prova/Somma-prova/coveragemerge/coveragemerge.html  -in /home/runner/work/Somma-prova/Somma-prova/coveragemerge.em ,/home/runner/work/Somma-prova/Somma-prova/coveragemerge.ec
    - name: Upload Emma reports
      uses: actions/upload-artifact@v2
      with:
        name: Coverage merge
        path: /home/runner/work/Somma-prova/Somma-prova/coveragemerge.?
     
    
